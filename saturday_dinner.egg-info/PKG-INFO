Metadata-Version: 2.1
Name: saturday-dinner
Version: 1.0.0
Summary: 수어 인식 및 처리를 위한 통합 라이브러리
Home-page: https://github.com/yourusername/saturday-dinner
Author: Saturday Dinner Team
Author-email: 
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Topic :: Multimedia :: Video
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: opencv-python>=4.8.0
Requires-Dist: mediapipe>=0.10.0
Requires-Dist: tensorflow>=2.13.0
Requires-Dist: numpy>=1.24.0
Requires-Dist: scikit-learn>=1.3.0
Requires-Dist: tqdm>=4.65.0
Requires-Dist: Pillow>=10.0.0
Requires-Dist: scipy>=1.11.0
Requires-Dist: matplotlib>=3.7.0
Requires-Dist: seaborn>=0.12.0
Requires-Dist: pandas>=2.0.0
Requires-Dist: psutil>=5.9.0
Requires-Dist: memory-profiler>=0.61.0
Provides-Extra: dev
Requires-Dist: pytest>=6.0; extra == "dev"
Requires-Dist: black>=21.0; extra == "dev"
Requires-Dist: flake8>=3.9; extra == "dev"
Requires-Dist: isort>=5.0; extra == "dev"

# Saturday Dinner - 수어 인식 및 처리 라이브러리

[![Python](https://img.shields.io/badge/python-3.8%2B-blue.svg)](https://www.python.org/)
[![License](https://img.shields.io/badge/license-MIT-green.svg)](LICENSE)
[![Package](https://img.shields.io/badge/package-saturday--dinner-orange.svg)](https://github.com/yourusername/saturday-dinner)

**Saturday Dinner**는 수어 데이터셋 처리, 비디오 경로 관리, 모델 학습 및 추론을 위한 통합 Python 라이브러리입니다.

## 🚀 주요 기능

- **비디오 경로 관리**: 수어 데이터셋의 복잡한 디렉토리 구조를 자동으로 처리
- **데이터 전처리**: MediaPipe를 활용한 랜드마크 추출 및 전처리
- **모델 학습**: LSTM, GRU, Transformer 등 다양한 모델 아키텍처 지원
- **실시간 추론**: 웹캠을 통한 실시간 수어 인식
- **데이터 분석**: 클러스터링 및 분류를 통한 데이터 분석 도구

## 📦 설치

### 개발 모드 설치 (권장)
```bash
# 저장소 클론
git clone https://github.com/yourusername/saturday-dinner.git
cd saturday-dinner

# 개발 모드로 설치
pip install -e .
```

### 일반 설치
```bash
pip install saturday-dinner
```

## 🛠️ 사용법

### 1. 라이브러리로 사용하기

```python
import saturday_dinner as sd

# 비디오 경로 찾기
video_path = sd.find_video("KETI_SL_0000000419.MOV")
print(f"비디오 경로: {video_path}")

# 모든 비디오 경로 가져오기
all_paths = sd.get_all_video_paths()
print(f"총 비디오 개수: {len(all_paths)}")

# 비디오 경로 통계 출력
sd.print_video_path_stats()
```

### 2. 개별 모듈 사용하기

```python
# 비디오 유틸리티만 사용
from saturday_dinner.utils import get_video_root_and_path, VIDEO_ROOTS

# 설정 정보 가져오기
from saturday_dinner.utils.config import MODEL_SAVE_DIR, CACHE_DIR

# 분류기 사용
from saturday_dinner.categorizer import VideoCluster, LabelCluster
```

### 3. 명령줄 도구 사용하기

#### 라벨 추출
```bash
# 모듈로 실행
python -m saturday_dinner.scripts.label_picker --input labels.csv --output spec.json

# 또는 직접 실행 (개발 모드 설치 후)
saturday-label-picker --input labels.csv --output spec.json --chapter chapter_01
```

#### 모델 학습
```bash
# 메인 학습 스크립트 실행
python -m saturday_dinner.core.main

# 또는 (개발 모드 설치 후)
saturday-train
```

#### 퀴즈 실행
```bash
# 퀴즈 시스템 실행
python -m saturday_dinner.core.sign_quiz model_info.json

# 또는 (개발 모드 설치 후)
saturday-quiz model_info.json
```

## 📁 프로젝트 구조

```
saturday_dinner/
├── __init__.py              # 메인 패키지 (핵심 함수들 노출)
├── utils/                   # 유틸리티 모듈
│   ├── __init__.py
│   ├── video_path_utils.py  # 비디오 경로 관리
│   └── config.py           # 설정 관리
├── core/                    # 핵심 기능
│   ├── __init__.py
│   ├── main.py             # 메인 학습 로직
│   ├── sign_quiz.py        # 퀴즈 시스템
│   └── label_cache_system.py # 라벨 캐시 시스템
├── categorizer/            # 데이터 분류 및 클러스터링
│   ├── __init__.py
│   ├── VideoCluster.py     # 비디오 클러스터링
│   ├── LabelCluster.py     # 라벨 클러스터링
│   └── ...
├── scripts/                # 유틸리티 스크립트
│   ├── __init__.py
│   └── label_picker.py     # 라벨 추출 스크립트
└── data/                   # 데이터 파일
    ├── __init__.py
    └── labels.csv          # 라벨 데이터
```

## 🔧 설정

### 비디오 경로 설정
비디오 데이터셋의 경로는 `saturday_dinner/utils/video_path_utils.py`에서 `VIDEO_ROOTS` 딕셔너리를 수정하여 설정할 수 있습니다:

```python
VIDEO_ROOTS = {
    (1, 3000): "/your/path/to/0001~3000(영상)",
    (3001, 6000): "/your/path/to/3001~6000(영상)",
    # ...
}
```

### 모델 설정
모델 학습 관련 설정은 `saturday_dinner/utils/config.py`에서 수정할 수 있습니다.

## 📊 데이터 처리 워크플로우

### 1. 라벨 추출
```bash
# CSV에서 유니크한 라벨 추출
python -m saturday_dinner.scripts.label_picker \
    --input labels.csv \
    --output specs/spec_new.json \
    --chapter chapter_01
```

### 2. 데이터 전처리 및 학습
```python
from saturday_dinner.core.main import main

# 학습 실행
main()
```

### 3. 실시간 추론
```python
from saturday_dinner.core.sign_quiz import main

# 퀴즈 실행
main()
```

## 🛡️ 개발 환경 설정

### 개발 모드 설치
```bash
# 개발 의존성 포함 설치
pip install -e ".[dev]"

# 코드 포맷팅
black saturday_dinner/
isort saturday_dinner/

# 린팅
flake8 saturday_dinner/
```

### 테스트 실행
```bash
# 테스트 실행
pytest tests/
```

## 📄 라이센스

이 프로젝트는 MIT 라이센스 하에 배포됩니다. 자세한 내용은 [LICENSE](LICENSE) 파일을 참조하세요.

## 🤝 기여하기

1. Fork the project
2. Create your feature branch (`git checkout -b feature/AmazingFeature`)
3. Commit your changes (`git commit -m 'Add some AmazingFeature'`)
4. Push to the branch (`git push origin feature/AmazingFeature`)
5. Open a Pull Request

## 📞 지원

문제가 발생하거나 질문이 있으시면 [Issues](https://github.com/yourusername/saturday-dinner/issues)를 통해 알려주세요.

## 📚 문서

더 자세한 문서는 [Wiki](https://github.com/yourusername/saturday-dinner/wiki)를 참조하세요.

---

Made with ❤️ by Saturday Dinner Team 
